<%- include('top') %>
<script id="rowTemplate" type="text/html">
	<tr action="api" class="<<fresh>>">
		<input type="hidden" name="host" value="<< host >>" />
		<td><a target="_blank" href="<<forcessl>><<host>>"><<forcessl>><<host>></a></td>
		<td><< targetssl >><< ip >>:<< targetPort >></td>
		<td class="hidden-xs"><<updated_on>></td>
		<td>
			<button type="button" data-host="<< host >>" onclick="editHost(this);" class="btn btn-sm btn-default">Edit</button>
			<button type="button" onclick="app.host.remove({host:'<<host>>'}, function(){tableAJAX('Host <<host>> delete.')})" class="btn btn-sm btn-default">Delete</button>
		</td>
	</tr>
</script>
<script type="text/javascript">
	var currentEditHost;

	function editHost(btn){
		var btn = $(btn);
		currentEditHost = btn.data('host');
		$('.editWindow').slideDown('fast');
		$('.editWindow .panel-title .pull-left').html("Edit "+ btn.data('host'))

		$('div.editWindow .panel-body span').html($('#addHost').html())
		$('div.editWindow .panel-body span button').remove()

		$(".editWindow input[name='edit_host']").val(btn.data('host'));

		app.host.get(currentEditHost, function(error, data){
			// console.log("app.host.get", data)
			$.each( data.results, function( key, value ) {
				if(typeof value == "boolean"){
					$(".editWindow #"+ key +"-"+ value).prop('checked', true)
				}else{
					$(".editWindow input[name='" + key + "']").val(value);
				}
				$('.editWindow .panel-body').slideDown('fast');
			});
		});
	}

	function tableAJAX(actionMessage){
		console.log("actionMessage",actionMessage);

		app.util.actionMessage('')
		if(actionMessage && actionMessage.includes("delete")) {
			console.log("It includes the word delete");

			let host = actionMessage.split(" ")[1]
			// Handle removing the item from the table-responsive
			let element = $(`tr:contains(${host})`)
			element.css("background-color", "blue")
			element.removeClass("marked")
			console.log("delete element contains host", element);
		}
		
		let initial = () => {
			$('#tableAJAX').html(''); // Clear the table

			// Populate the entire table initially with redis data
			console.log("initial getting run");
			app.host.list(function(err, data){
				if(err) return app.util.actionMessage(err, {type: 'danger'});	
				if(data){

					// console.log("tableAJAX data", data); // array of all data
					$.each(data, function( key, value ) {
						value['updated_on'] = moment(value['updated_on'], "x").fromNow();
						value['targetssl'] = value['targetssl'] ? "https://" : "http://";
						value['forcessl'] = value['forcessl'] ? "https://" : "http://";
						// console.log("value", value);

						let host_row = ich.rowTemplate(value);
						// console.log("host_row", host_row);
						let tableRow = $('#tableAJAX').append(host_row);
						// console.log("tableRow",tableRow);

						// console.log("$('#tableAJAX')", $('#tableAJAX'));
					});

					app.util.actionMessage(actionMessage || '', {type: 'info'});
					$('#tableAJAX').fadeIn('fast');
				}else{
					app.util.actionMessage('No hosts...', {type: 'info'});
				}
			});
		}

		let individualUpdate = () => {
			// Manages the table based on adding and deleting hosts
			app.host.list(function(err, data){
				if(err) return app.util.actionMessage(err, {type: 'danger'});	
				if(data){
					console.log("individualUpdate getting run data: ", data); // Not updating new domains that are registered
					// Maybe need to get the list again... TODO
					// Compare redis with current list. if redis has more then append to list. if redis has less, then find it and remove it.
					// tag each element in the <tr /> with something to identify it as valid. Loop over all of them and remove all who are not valid, then remove the tags.

					let approved_list = []
					$.each(data, function( key, value ) {
						value['updated_on'] = moment(value['updated_on'], "x").fromNow();
						value['targetssl'] = value['targetssl'] ? "https://" : "http://";
						value['forcessl'] = value['forcessl'] ? "https://" : "http://";
						// console.log("value", value);

						let host_row = ich.rowTemplate(value);
						let element;
						console.log("host_row", host_row);

						// Find element first
						// let element = $('#tableAJAX').find(host_row[0])
						// let element = $('#tableAJAX').contains(value.host)
						let star = value.host.includes("*")

						element = $(`tr:contains(://${value.host})`)

						console.log("element", element);
						if(element.length != 0) {
							console.log("the element has context");
							// Find and replace element
							// element.append(host_row[0])
							element[0].replaceWith(host_row[0]);
							let elem2 = $(`tr:contains(://${value.host})`)
							elem2.addClass("marked")

							// element.css("background-color", "blue")
							console.log("element2", elem2);

						} else {
							console.log("the element was not in the list, appending now");
							console.log("$('#tableAJAX')", $('#tableAJAX'));
							let row = $('#tableAJAX')[0].insertRow(host_row);
							console.log("row", row);					
						}
					})
					// If the item exists on the tree and is not present in the approved_list, delete it from the tree
					$( "#tableAJAX tr" ).each(function( index, val ) {
						// console.log("each in tableAJAX", index);
						// console.log("val in tableAJAX", val);
						// console.log("this in tableAJAX", $(this));
						// console.log( index + ": " + $( this ).text() );
						if(!$(this).hasClass("marked")) {
							console.log("the element does not have marked class");
							// find previos element and call scrollIntoView
							console.log("$(this) gonna remove", $(this));

							$(this).remove()
						} else {
							$(this).removeClass("marked")
						}

					});

					app.util.actionMessage(actionMessage || '', {type: 'info'});
					$('#tableAJAX').fadeIn('fast');

				} else {
					app.util.actionMessage('No hosts...', {type: 'info'});
				}
			})
		}

		var counter = 0
		setTimeout(() => {

			if(counter==0) initial()
			counter++

			setInterval(() => {
				
				if(counter==1) individualUpdate()
				console.log("setInterval executed");

			}, 10000);
		}, 1000);
	}

		var scrollIntoView = (elem) => {
			// find element on page
			console.log("elem", elem);
			const element = document.getElementById("content");

			element.scrollIntoView();
		}

	$(document).ready(function(){

		tableAJAX(); //populate the table
		console.log("document ready executed");

		$('form.addHost').on('submit', function(){
			console.log("addHost submit button pushed");
			
			event.preventDefault();

			$form = $(this);
			console.log("New Host submitted", $form);

			var action = $($form.find('button[type="submit"]')[0]).data('type') // add

			app.util.actionMessage('')

			if($form.attr('isValid') === 'true'){
				let date = Date.now()
				console.log("date", date);
				let momdate = moment(date).fromNow();
				console.log("momdate", momdate);

				var formdata = $form.serializeObject();

				if(formdata.targetPort) formdata.targetPort = Number(formdata.targetPort);
				if(formdata.targetssl) formdata.targetssl = formdata.targetssl == 'true' ? true : false;
				if(formdata.forcessl) formdata.forcessl = formdata.forcessl == 'true' ? true : false;
				formdata.updated_on = date

				console.log("formdata", formdata);

				let value = formdata;
				
				// value.updated_on = momdate;
				value.targetssl = formdata['targetssl'] ? "https://" : "http://";
				value.forcessl = formdata['forcessl'] ? "https://" : "http://";

				console.log("valueData", value);


				app.host[action](formdata, function(error, data){
					if(error){
						console.log('error data',data)
						app.util.actionMessage(error + data.message, {type: 'danger'});
						return;
					}
					
					if(action == 'edit') $('.editWindow').slideUp('fast');

					app.util.actionMessage(data.message || 'Error!', {type: 'info'});
					tableAJAX("Added "+ formdata.host);
					$form.trigger('reset');

					console.log("host was added");

				})

				let host_row = ich.rowTemplate(value);
				$('#tableAJAX').append(host_row);

				console.log("document ready finished");
			}
		});
	});
</script>
<!-- The section is the left page form after the edit button has been clicked  -->
<div class="row" style="display:none">
	<div class="col-md-4">
		<div class="panel panel-danger editWindow" style="display:none">
			<div class="panel-heading">
				<div class="panel-title">
					<div class="pull-left">Edit $host!</div>
					&nbsp;
					<div class="pull-right">
						<label class="glyphicon glyphicon-circle-arrow-down"></label>
						<label class="glyphicon glyphicon-remove-circle"></label>
					</div>
				</div>
			</div>
			<div class="panel-body">
				<form class="addHost" onsubmit="$(this).validate()">
					<span></span>
					<input type="hidden" name="edit_host" />
					<button type="submit" data-type="edit" class="btn btn-danger host-submit">Update</button>
					<button class="btn btn-link" type="reset">Cancel</button>
				</form>
			</div>
		</div>

		<!-- The section is the left page form to add new proxy -->
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="panel-title">
					Add New Proxy
					<div class="pull-right">
						<label class="glyphicon glyphicon-circle-arrow-down panel-toggle"></label>
					</div>
				</div>
			</div>
			<div class="panel-body">
				<form class="addHost" id="addHost" onsubmit="$(this).validate()">
					
					<div class="form-group">
						<label class="control-label">Incoming SSL</label>
						<div class="radio">
							<label>
								<input type="radio" name="forcessl" id="forcessl-true" value="true" checked>
								Force incoming connections over HTTPS <b>Recommended</b>
							</label>
						</div>
						<div class="radio">
							<label>
								<input type="radio" name="forcessl" id="forcessl-false" value="false">
								Allow use of both HTTP and HTTPS
							</label>
						</div>
					</div>

					<div class="form-group">
						<label class="control-label">Hostname</label>
						<input type="text" name="host" class="form-control" placeholder="ex: proxy.cloud-ops.net" validate=":3" >
					</div>

					<div class="form-group">
						<label class="control-label">Target IP or Host Name</label>
						<input type="text" name="ip" class="form-control" placeholder="ex: 10.10.10.10" validate=":3" />
					</div>

					<div class="form-group">
						<label class="control-label">Target TCP Port</label>
						<input type="number"  name="targetPort" class="form-control" value="80" min="0" max="65535" />
					</div>

					<div class="form-group">
						<label class="control-label">Target SSL</label>
						<div class="radio">
							<label>
								<input type="radio" name="targetssl" id="targetssl-true" value="true">
								Proxy to HTTPS 
							</label>
						</div>
						<div class="radio">
							<label>
								<input type="radio" name="targetssl" id="targetssl-false" value="false" checked>
								Proxy to HTTP <b>Recommended</b>
							</label>
						</div>
					</div>
	
					<button type="submit" data-type="add" class="btn btn-default host-submit">Add</button>
				</form>
			</div>
		</div>
	</div>

	<!-- Main list of Proxies  -->
	<div class="col-md-8">
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="panel-title">
					Proxy List
					<div class="pull-right">
						<label class="glyphicon glyphicon-circle-arrow-down panel-toggle"></label>
						<label class="glyphicon glyphicon-refresh"></label>
					</div>
				</div>
			</div>
			<div class="panel-body" style="padding-bottom:0">
				<div class="alert alert-warning actionMessage" style="display:none">
					<!-- Message after AJAX action is preformed -->
				</div>
				<div class="table-responsive">
					<table class="table">
						<thead>
							<th>Hostname</th>
							<th>target</th>
							<th class="hidden-xs">Updated</th>
							<th>Actions</th>
						</thead>
						<tbody id="tableAJAX"> 
							<tr class="marked">
								<td>ONE</td>
								<td>TWO</td>
								<td>3</td>
								<td>This is the first row</td>
							</tr>
							<!-- append the tr --> 
							<!-- <tr ajax loaded table /tr>-->
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
<%- include('bottom') %>
